<?php

namespace Hametuha\HanmotoHelper\UI;


use Hametuha\HanmotoHelper\Models\ModelItem;
use Hametuha\HanmotoHelper\Pattern\UiPattern;

/**
 * List of item.
 */
class ItemsList extends UiPattern {

	protected static $slug = 'hanmoto-items';

	protected static $icon = 'dashicons-database';

	protected $per_page = 20;

	/**
	 * {@inheritdoc}
	 */
	protected function get_table_classes() {
		return [ 'widefat', 'striped', 'table-view-list', $this->_args['plural'] ];
	}


	/**
	 * {@inheritdoc}
	 */
	static protected function label() {
		return __( 'Stocks', 'hanmoto' );
	}

	/**
	 * {@inheritdoc}
	 */
	public function __construct( $args = array() ) {
		parent::__construct( [
			'singular' => 'item',
			'plural'   => 'items',
			'ajax'     => false
		] );
	}

	/**
	 * @return array
	 */
	protected function get_bulk_actions() {
		return parent::get_bulk_actions(); // TODO: Change the autogenerated stub
	}


	/**
	 * {@inheritdoc}
	 */
	public function prepare_items() {
		$items = ModelItem::get_instance();

		// Set headers.
		$this->_column_headers = [
			$this->get_columns(),
			$this->get_sortable_columns(),
			[],
		];

		// Display sorted data
		$this->items = $items->get_items( [
			'posts_per_page' => $this->per_page,
		] );

		// Register pagination options
		$this->set_pagination_args( [
			'total_items' => $items->found_rows(),
			'per_page'    => $this->per_page,
		] );
	}

	/**
	 * Register columns.
	 *
	 * @return array
	 */
	public function get_columns() {
		return [
			'cb'         => '<input type="checkbox" />',
			'id'         => '#',
			'title'      => __( 'Title', 'hanmoto' ),
			'registered' => __( 'Registered', 'hanmoto' ),
			'updated'    => __( 'Updated', 'hanmoto' ),
		];
	}

	/**
	 * @return void
	 */
	static protected function editor() {
		?>
		ここにエディターがくる。
		<?php
	}
}
